#include <xc.h>
#define _XTAL_FREQ 4000000
int arr1[5] = {1, 20, 3, 4, 5};
int arr2[5] = {6, 7, 8, 9, 10};
int temp[5], t[5];
int i;
int choice = 1; // 1: memory, 2: memmove, 3: swap

void my_memory(int* dest, int* src, int size) {
    for (int i = 0; i < size; i++) {
        dest[i] = src[i];
    }
}

void my_memmove(int* dest, int* src, int size) {
    if (dest < src) {
        for (int i = 0; i < size; i++) {
            dest[i] = src[i];
        }
    } else {
        for (int i = size - 1; i >= 0; i--) {
            dest[i] = src[i];
        }
    }
}

void main(void) {
    TRISD = 0x00;
    PORTD = 0x00;

    switch (choice) {
        case 1:
            my_memory(temp, arr1, 5);
            break;
        case 2:
            my_memmove(t, arr1, 5);
            break;
        case 3:
            for (i = 0; i < 5; i++) {
                int swapTemp = arr1[i];
                arr1[i] = arr2[i];
                arr2[i] = swapTemp;
            }
            break;
        default:
            break;
    }

    // Output arr1 to PORTD
    for (i = 0; i < 5; i++) {
        PORTD = arr1[i];
        // __delay_ms(1000);
    }

    while(1);
}
