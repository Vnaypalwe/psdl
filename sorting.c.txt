#include <xc.h>
#include <stdio.h>
#include <stdlib.h>
#define _XTAL_FREQ 8000000

void swap(int *x, int *y) {
    int temp = *x;
    *x = *y;
    *y = temp;
}

int arr[] = {5, 2, 3, 1, 4};
int n = 5;

int comp_asc(const void *a, const void *b) {
    return (*(int *)a - *(int *)b);
}

int comp_desc(const void *a, const void *b) {
    return (*(int *)b - *(int *)a);
}

int sortMethod = 1;

void main(void) {
    TRISB = 0x00; // Set PORTB as output
    TRISC = 0x00; // Set PORTC as output
    TRISD = 0x00; // Set PORTD as output

    switch (sortMethod) {
        case 1: // Bubble Sort Ascending
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n - 1 - i; j++) {
                    if (arr[j] > arr[j + 1]) {
                        swap(&arr[j], &arr[j + 1]);
                    }
                }
            }
            break;
        case 2: // qsort Ascending
            qsort(arr, (size_t)n, sizeof(arr[0]), comp_asc);
            break;
        case 3: // Bubble Sort Descending
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n - 1 - i; j++) {
                    if (arr[j] < arr[j + 1]) {
                        swap(&arr[j], &arr[j + 1]);
                    }
                }
            }
            break;
        case 4: // qsort Descending
            qsort(arr, (size_t)n, sizeof(arr[0]), comp_desc);
            break;
        default:
            break;
    }

    PORTB = (unsigned char)arr[0]; // Output to PORTB
    PORTC = (unsigned char)arr[1]; // Output to PORTC
    PORTD = (unsigned char)arr[2]; // Output to PORTD
}
